console.log("NordSales service worker initialized");const c={};function s(t){const r=/https:\/\/([^.]+)\.crm\.dynamics\.com/i,e=t.match(r);return e&&e.length>1?(console.log("Organization ID detected:",e[1]),e[1]):(console.log("Could not extract organization ID from URL:",t),null)}async function d(t,r){try{const e=await chrome.tabs.get(t);if(!e||!e.url||!e.url.includes("crm.dynamics.com"))return console.log("Tab is not a Dynamics CRM tab"),!1;const o=e.url.match(/(https:\/\/[^\/]+)/);if(!o)return console.log("Could not extract base URL from tab"),!1;const i=`${o[1]}/main.aspx?etn=opportunity&pagetype=entityrecord&id=${r}`;return console.log(`Navigating tab ${t} to opportunity ${r}`),await chrome.tabs.update(t,{url:i}),setTimeout(()=>{chrome.tabs.sendMessage(t,{type:"CHECK_OPPORTUNITY_ID"},a=>{if(chrome.runtime.lastError){console.warn("CHECK_OPPORTUNITY_ID error:",chrome.runtime.lastError.message);return}a&&a.opportunityId&&(console.log("Got opportunity ID after navigation:",a.opportunityId),chrome.storage.local.set({currentOpportunityId:a.opportunityId,lastUpdated:Date.now()}),chrome.runtime.sendMessage({type:"OPPORTUNITY_DETECTED",opportunityId:a.opportunityId}))})},1500),setTimeout(()=>{u(t)},1e3),!0}catch(e){return console.error("Error navigating to opportunity:",e),!1}}function u(t){chrome.tabs.get(t).then(r=>{if(r&&r.url&&r.url.includes("crm.dynamics.com")){const e=s(r.url);e&&chrome.storage.local.set({currentOrgId:e,lastOrgIdUpdated:Date.now()}),chrome.tabs.sendMessage(t,{type:"CHECK_OPPORTUNITY_ID"},o=>{if(chrome.runtime.lastError){console.log("Message error:",chrome.runtime.lastError.message),chrome.scripting.executeScript({target:{tabId:t},files:["contentScript.js"]}).catch(n=>{console.log("Error re-injecting content script:",n)});return}o&&o.opportunityId?(chrome.storage.local.set({currentOpportunityId:o.opportunityId,lastUpdated:Date.now()}),chrome.runtime.sendMessage({type:"OPPORTUNITY_DETECTED",opportunityId:o.opportunityId,organizationId:o.organizationId||e,timestamp:Date.now()}).catch(()=>{})):(chrome.storage.local.remove(["currentOpportunityId","lastUpdated"]),chrome.runtime.sendMessage({type:"OPPORTUNITY_CLEARED"}).catch(()=>{}))})}else clearInterval(c[t]),delete c[t]}).catch(()=>{clearInterval(c[t]),delete c[t]})}function m(t){c[t]&&clearInterval(c[t]),c[t]=setInterval(()=>{u(t)},2e3)}chrome.tabs.onUpdated.addListener((t,r,e)=>{if(r.status==="complete"&&e.url&&e.url.includes("crm.dynamics.com")){console.log("Dynamics CRM tab updated:",t);const o=s(e.url);o&&(console.log("Stored organization ID from tab update:",o),chrome.storage.local.set({currentOrgId:o})),chrome.scripting.executeScript({target:{tabId:t},files:["contentScript.js"]}).then(()=>{m(t)}).catch(n=>{console.error("Error injecting content script:",n)}),chrome.storage.local.get(["autoOpen"],n=>{n.autoOpen!==!1&&(chrome.action.setBadgeText({text:"!"}),chrome.action.setBadgeBackgroundColor({color:"#0078d4"}))})}else r.status==="complete"&&e.url&&!e.url.includes("crm.dynamics.com")&&chrome.action.setBadgeText({text:""})});chrome.tabs.onRemoved.addListener(t=>{c[t]&&(clearInterval(c[t]),delete c[t])});chrome.action.onClicked.addListener(t=>{chrome.sidePanel.open({tabId:t.id}).then(()=>{chrome.action.setBadgeText({text:""})}).catch(r=>{console.error("Error opening side panel:",r)})});chrome.runtime.onMessage.addListener((t,r,e)=>{if(console.log("Service worker received message:",t.type),t.type==="OPPORTUNITY_DETECTED")return console.log("Received opportunity ID:",t.opportunityId),chrome.storage.local.set({currentOpportunityId:t.opportunityId,lastUpdated:t.timestamp||Date.now()}),chrome.runtime.sendMessage(t).catch(o=>{console.log("Could not forward message to side panel (probably not open)")}),e({success:!0}),!0;if(t.type==="OPPORTUNITY_CLEARED"){if(globalThis.lastClearedTimestamp&&Date.now()-globalThis.lastClearedTimestamp<500){console.log("Duplicate opportunity clear message, skipping");return}return globalThis.lastClearedTimestamp=Date.now(),chrome.runtime.sendMessage(t).catch(o=>{console.log("Could not forward message to side panel",o)}),e({success:!0}),!0}return t.type==="POPUP_OPENED"?(console.log("Side panel opened, checking for current opportunity"),chrome.tabs.query({active:!0,url:"*://*.crm.dynamics.com/*"},o=>{if(o&&o.length>0){const n=o[0].id;chrome.tabs.get(n).then(i=>{const a=s(i.url);a&&chrome.storage.local.set({currentOrgId:a}),chrome.tabs.sendMessage(n,{type:"CHECK_OPPORTUNITY_ID"},l=>{if(chrome.runtime.lastError){console.log("Error communicating with content script:",chrome.runtime.lastError.message);return}l&&l.opportunityId&&(console.log("Got opportunity ID from content script:",l.opportunityId),chrome.storage.local.set({currentOpportunityId:l.opportunityId,lastUpdated:Date.now()}),chrome.runtime.sendMessage({type:"OPPORTUNITY_DETECTED",opportunityId:l.opportunityId,organizationId:l.organizationId||a}).catch(p=>{console.log("Could not send to side panel:",p)}))})}).catch(i=>{console.log("Tab no longer exists:",i)})}}),e({success:!0}),!0):t.type==="NAVIGATE_TO_OPPORTUNITY"?(chrome.tabs.query({active:!0,currentWindow:!0},async o=>{if(o&&o.length>0){const n=o[0].id,i=await d(n,t.opportunityId);e({success:i})}else e({success:!1,error:"No active tab found"})}),!0):t.type==="SET_AUTO_OPEN"?(chrome.storage.local.set({autoOpen:t.enabled}),e({success:!0}),!0):(e({success:!1,error:"Unknown message type"}),!0)});chrome.runtime.onInstalled.addListener(()=>{console.log("NordSales extension installed/updated"),chrome.storage.local.get(["autoOpen","currentOrgId"],t=>{t.autoOpen===void 0&&chrome.storage.local.set({autoOpen:!0})})});
